generator cenov_dev_client {
  provider        = "prisma-client-js"
  output          = "./generated"
  previewFeatures = ["views"]
}

datasource cenov_dev_db {
  provider = "postgresql"
  url      = env("CENOV_DEV_DATABASE_URL")
  schemas  = ["produit", "public"]
}

model cross_ref {
  crf_id                Int
  fk_product            Int
  crf_code              String?   @cenov_dev_db.VarChar(100)
  sup_id                Int?
  sup_code              String?   @cenov_dev_db.VarChar(100)
  sup_label             String?   @cenov_dev_db.VarChar(255)
  pro_cenov_id          String?   @cenov_dev_db.VarChar(100)
  crf_sup_name          String?   @cenov_dev_db.VarChar(255)
  crf_equivalence_level String?   @cenov_dev_db.VarChar(50)
  fk_document           Int?
  created_at            DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at            DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  product               product   @relation(fields: [fk_product], references: [pro_id], onDelete: NoAction, onUpdate: NoAction, map: "cross_ref_produit_pro_id_fk")

  @@id([crf_id, fk_product])
  @@schema("produit")
}

model kit {
  kit_id        Int             @id @default(autoincrement())
  kit_label     String          @cenov_dev_db.VarChar(100)
  created_at    DateTime?       @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at    DateTime?       @default(now()) @cenov_dev_db.Timestamp(6)
  product       product[]
  kit_attribute kit_attribute[]
  part_nc       part_nc[]

  @@schema("public")
}

model kit_attribute {
  fk_kit                                                         Int
  fk_attribute_characteristic                                    Int
  fk_attribute_unite                                             Int?
  kat_value                                                      String?    @cenov_dev_db.VarChar(50)
  created_at                                                     DateTime?  @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at                                                     DateTime?  @default(now()) @cenov_dev_db.Timestamp(6)
  kat_id                                                         Int        @id @default(autoincrement())
  attribute_kit_attribute_fk_attribute_characteristicToattribute attribute  @relation("kit_attribute_fk_attribute_characteristicToattribute", fields: [fk_attribute_characteristic], references: [atr_id], onDelete: NoAction, onUpdate: NoAction, map: "kit_attribute_fk_attribute_carac_fkey")
  attribute_kit_attribute_fk_attribute_uniteToattribute          attribute? @relation("kit_attribute_fk_attribute_uniteToattribute", fields: [fk_attribute_unite], references: [atr_id], onDelete: Cascade, onUpdate: NoAction, map: "kit_attribute_fk_attribute_fkey")
  kit                                                            kit        @relation(fields: [fk_kit], references: [kit_id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model part_nc {
  par_id     Int       @id(map: "part_pkey") @default(autoincrement())
  fk_kit     Int?
  par_label  String    @cenov_dev_db.VarChar(100)
  created_at DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  kit        kit?      @relation(fields: [fk_kit], references: [kit_id], onDelete: NoAction, onUpdate: NoAction, map: "part_fk_kit_fkey")

  @@schema("public")
}

model category {
  cat_id             Int                  @id(map: "categorie_pkey") @default(autoincrement())
  fk_parent          Int?
  cat_code           String?              @cenov_dev_db.VarChar(60)
  cat_label          String               @cenov_dev_db.VarChar(100)
  cat_picture        String?              @cenov_dev_db.VarChar(255)
  cat_wp_id          Int?
  cat_wp_name        String?              @cenov_dev_db.VarChar(255)
  created_at         DateTime?            @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @cenov_dev_db.Timestamp(6)
  category           category?            @relation("categoryTocategory", fields: [fk_parent], references: [cat_id], onDelete: NoAction, onUpdate: NoAction, map: "produit_categorie_fk_parent_fkey")
  other_category     category[]           @relation("categoryTocategory")
  category_attribute category_attribute[]
  product_category   product_category[]

  @@unique([fk_parent, cat_code], map: "produit_categorie_prc_code_index")
  @@schema("produit")
}

model category_attribute {
  fk_category      Int
  fk_attribute     Int
  cat_atr_required Boolean?  @default(false)
  created_at       DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at       DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  attribute        attribute @relation(fields: [fk_attribute], references: [atr_id], onDelete: NoAction, onUpdate: NoAction, map: "categorie_attribute_fk_attribute_fkey")
  category         category  @relation(fields: [fk_category], references: [cat_id], onDelete: NoAction, onUpdate: NoAction, map: "categorie_attribute_fk_categorie_fkey")

  @@id([fk_category, fk_attribute], map: "categorie_attribut_pkey")
  @@schema("produit")
}

model family {
  fam_id       Int       @id @default(autoincrement())
  fk_parent    Int?
  fam_code     String    @cenov_dev_db.VarChar(60)
  fam_label    String    @cenov_dev_db.VarChar(100)
  fk_supplier  Int
  fk_category  Int?
  created_at   DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at   DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  family       family?   @relation("familyTofamily", fields: [fk_parent], references: [fam_id], onDelete: NoAction, onUpdate: NoAction, map: "family_fk_parent_fkey")
  other_family family[]  @relation("familyTofamily")
  supplier     supplier  @relation(fields: [fk_supplier], references: [sup_id], onDelete: NoAction, onUpdate: NoAction, map: "family_fk_supplier_fkey")

  @@unique([fk_parent, fam_code])
  @@schema("produit")
}

model price_purchase {
  fk_product    Int
  pp_date       DateTime  @cenov_dev_db.Date
  pp_amount     Float
  pp_discount   Float?
  pp_net_amount Float?    @default(dbgenerated("(pp_amount * ((1)::double precision - (pp_discount / (100)::double precision)))"))
  pro_cenov_id  String?   @cenov_dev_db.VarChar(100)
  sup_id        Int?
  created_at    DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at    DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  fk_document   Int?
  product       product   @relation(fields: [fk_product], references: [pro_id], onDelete: NoAction, onUpdate: NoAction, map: "price_purchase_fk_product_fkey")

  @@id([fk_product, pp_date])
  @@index([fk_product, pp_date])
  @@schema("produit")
}

model product {
  pro_id           Int                @id(map: "produit_pkey") @default(autoincrement())
  pro_code         String?            @cenov_dev_db.VarChar(20)
  fk_supplier      Int?
  fk_kit           Int?
  fk_family        Int?
  sup_label        Int?
  sup_code         String?            @cenov_dev_db.VarChar(100)
  created_at       DateTime?          @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at       DateTime?          @default(now()) @cenov_dev_db.Timestamp(6)
  pro_cenov_id     String?            @cenov_dev_db.VarChar(50)
  fk_ssfamily      Int?
  fk_sfamily       Int?
  cross_ref        cross_ref[]
  price_purchase   price_purchase[]
  kit              kit?               @relation(fields: [fk_kit], references: [kit_id], onDelete: NoAction, onUpdate: NoAction, map: "produit_fk_kit_fkey")
  supplier         supplier?          @relation(fields: [fk_supplier], references: [sup_id], onDelete: NoAction, onUpdate: NoAction, map: "produit_supplier_sup_id_fk")
  product_category product_category[]

  @@schema("produit")
}

model product_category {
  fk_product  Int
  fk_category Int
  created_at  DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at  DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  category    category  @relation(fields: [fk_category], references: [cat_id], onDelete: NoAction, onUpdate: NoAction, map: "produit_categorie_categorie_prc_id_fk")
  product     product   @relation(fields: [fk_product], references: [pro_id], onDelete: NoAction, onUpdate: NoAction, map: "produit_categorie_produit_pro_id_fk")

  @@id([fk_product, fk_category], map: "produit_categorie_pkey")
  @@schema("produit")
}

model attribute {
  atr_id                                                             Int                  @id @default(autoincrement())
  atr_nature                                                         String?              @cenov_dev_db.VarChar(60)
  atr_value                                                          String?              @cenov_dev_db.VarChar(60)
  atr_label                                                          String               @cenov_dev_db.VarChar(100)
  created_at                                                         DateTime?            @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at                                                         DateTime?            @default(now()) @cenov_dev_db.Timestamp(6)
  atr_code                                                           String?              @cenov_dev_db.VarChar(50)
  atr_symbol_intl                                                    String?              @cenov_dev_db.VarChar(50)
  atr_description                                                    String?
  atr_wp_name                                                        String?              @cenov_dev_db.VarChar(255)
  atr_wp_id                                                          Int?
  atr_imposed_value                                                  String?              @cenov_dev_db.VarChar(255)
  atr_check                                                          Boolean?
  atr_symbol_fr                                                      String?              @cenov_dev_db.VarChar(50)
  category_attribute                                                 category_attribute[]
  attribute_value                                                    attribute_value[]
  kit_attribute_kit_attribute_fk_attribute_characteristicToattribute kit_attribute[]      @relation("kit_attribute_fk_attribute_characteristicToattribute")
  kit_attribute_kit_attribute_fk_attribute_uniteToattribute          kit_attribute[]      @relation("kit_attribute_fk_attribute_uniteToattribute")

  @@unique([atr_nature, atr_value], map: "idx_attribute")
  @@schema("public")
}

model supplier {
  sup_id          Int       @id(map: "supplier_pk") @default(autoincrement())
  sup_code        String    @cenov_dev_db.VarChar(10)
  sup_label       String    @cenov_dev_db.VarChar(70)
  sup_parent_name String?   @cenov_dev_db.VarChar(70)
  sup_brand_name  String?   @cenov_dev_db.VarChar(70)
  cat_code        String?   @cenov_dev_db.VarChar(100)
  created_at      DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at      DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  family          family[]
  product         product[]

  @@index([sup_code], map: "supplier_sup_code_index")
  @@schema("public")
}

model attribute_value {
  av_id          Int       @id(map: "attribute_values_pkey")
  av_value_id    String    @cenov_dev_db.VarChar(50)
  av_atr_id      Int
  av_value_code  String    @cenov_dev_db.VarChar(50)
  av_value_label String    @cenov_dev_db.VarChar(100)
  created_at     DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at     DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  attribute      attribute @relation(fields: [av_atr_id], references: [atr_id], onDelete: Cascade, onUpdate: NoAction, map: "attribute_values_attribute_id_fkey")

  @@unique([av_atr_id, av_value_code], map: "attribute_values_attribute_id_value_code_key")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model document {
  doc_data_source      String?         @cenov_dev_db.VarChar(500)
  doc_link_source      String?         @cenov_dev_db.VarChar(200)
  doc_type_file_source String?         @cenov_dev_db.VarChar(50)
  doc_id               Int             @id @default(autoincrement())
  doc_file_name        String?         @cenov_dev_db.VarChar(255)
  created_at           DateTime?       @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at           DateTime?       @default(now()) @cenov_dev_db.Timestamp(6)
  document_link        document_link[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model document_link {
  id          Int       @id @default(autoincrement())
  fk_document Int
  entity_type String    @cenov_dev_db.VarChar(50)
  entity_id   Int
  created_at  DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  updated_at  DateTime? @default(now()) @cenov_dev_db.Timestamp(6)
  document    document  @relation(fields: [fk_document], references: [doc_id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([fk_document, entity_type, entity_id])
  @@unique([fk_document, entity_type, entity_id], map: "unique_document_entity")
  @@index([fk_document], map: "idx_doc_link_document")
  @@index([entity_type, entity_id], map: "idx_doc_link_entity")
  @@schema("public")
}

view produit_v_produit_categorie_attribut {
  pro_id    Int
  kit_label String @cenov_dev_db.VarChar(100)
  atr_id    Int
  atr_label String @cenov_dev_db.VarChar(100)
  cat_label String @cenov_dev_db.VarChar(100)

  @@map("v_produit_categorie_attribut")
  @@schema("produit")
}

view public_v_produit_categorie_attribut {
  pro_id    Int
  kit_label String @cenov_dev_db.VarChar(100)
  atr_id    Int
  atr_label String @cenov_dev_db.VarChar(100)
  cat_label String @cenov_dev_db.VarChar(100)

  @@map("v_produit_categorie_attribut")
  @@schema("public")
}

view v_categorie {
  atr_0_id    Int
  atr_0_label String  @cenov_dev_db.VarChar(100)
  atr_1_id    Int
  atr_1_label String  @cenov_dev_db.VarChar(100)
  atr_2_id    Int?
  atr_2_label String? @cenov_dev_db.VarChar(100)
  atr_3_id    Int?
  atr_3_label String? @cenov_dev_db.VarChar(100)
  atr_4_id    Int?
  atr_4_label String? @cenov_dev_db.VarChar(100)
  atr_5_id    Int?
  atr_5_label String? @cenov_dev_db.VarChar(100)
  atr_6_id    Int?
  atr_6_label String? @cenov_dev_db.VarChar(100)
  atr_7_id    Int?
  atr_7_label String? @cenov_dev_db.VarChar(100)

  @@schema("public")
}

view v_kit_caracteristique {
  kit_label String @cenov_dev_db.VarChar(100)
  atr_label String @cenov_dev_db.VarChar(100)
  valeur    String @cenov_dev_db.VarChar(50)
  unit      String @cenov_dev_db.VarChar(60)

  @@schema("public")
}

view attribute_required {
  cat_id           Int?
  cat_label        String?  @cenov_dev_db.VarChar(100)
  atr_id           Int?
  atr_label        String?  @cenov_dev_db.VarChar(100)
  cat_atr_required Boolean?

  @@schema("public")
}

view import_name {
  pro_id               Int?
  cenov_id             String?   @cenov_dev_db.VarChar(50)
  pro_code             String?   @cenov_dev_db.VarChar(20)
  supplier_id          Int?
  supplier_code        String?   @cenov_dev_db.VarChar(10)
  supplier_name        String?   @cenov_dev_db.VarChar(70)
  famille              String?   @cenov_dev_db.VarChar(100)
  sous_famille         String?   @cenov_dev_db.VarChar(100)
  sous_sous_famille    String?   @cenov_dev_db.VarChar(100)
  category_label       String?   @cenov_dev_db.VarChar(100)
  category_id          String?   @cenov_dev_db.VarChar(60)
  nom_commercial       String?   @cenov_dev_db.VarChar(100)
  pression_limite_mbar String?
  puissance_kw         String?
  att0000053           String?
  att0000054           String?
  att0000055           String?
  att0000056           String?
  data_source          String?   @cenov_dev_db.VarChar(500)
  type_file_source     String?   @cenov_dev_db.VarChar(50)
  link_source          String?   @cenov_dev_db.VarChar(200)
  modification_date    DateTime? @cenov_dev_db.Timestamp(6)

  @@schema("produit")
}

view v_price_purchase {
  fk_product    Int?
  pp_date       DateTime? @cenov_dev_db.Date
  pp_amount     Float?
  pp_discount   Float?
  pp_net_amount Float?
  pro_cenov_id  String?   @cenov_dev_db.VarChar(100)
  sup_id        Int?
  fk_document   Int?

  @@schema("produit")
}

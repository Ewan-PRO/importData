
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CategorieScalarFieldEnum = {
  cat_id: 'cat_id',
  fk_parent: 'fk_parent',
  cat_code: 'cat_code',
  cat_label: 'cat_label'
};

exports.Prisma.Categorie_attribut_cenov_dev_ewanScalarFieldEnum = {
  fk_categorie: 'fk_categorie',
  fk_attribute: 'fk_attribute'
};

exports.Prisma.Cross_refScalarFieldEnum = {
  crf_id: 'crf_id',
  fk_produit: 'fk_produit'
};

exports.Prisma.FamilleScalarFieldEnum = {
  fam_id: 'fam_id',
  fk_parent: 'fk_parent',
  fam_code: 'fam_code',
  fam_label: 'fam_label',
  fk_supplier: 'fk_supplier'
};

exports.Prisma.ProduitScalarFieldEnum = {
  pro_id: 'pro_id',
  pro_code: 'pro_code',
  fk_supplier: 'fk_supplier',
  fk_kit: 'fk_kit',
  fk_famille: 'fk_famille',
  fk_sfamille: 'fk_sfamille',
  fk_ssfamille: 'fk_ssfamille',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Produit_categorie_cenov_dev_ewanScalarFieldEnum = {
  fk_produit: 'fk_produit',
  fk_categorie: 'fk_categorie'
};

exports.Prisma.Tarif_achat_cenov_dev_ewanScalarFieldEnum = {
  fk_produit: 'fk_produit',
  taa_date: 'taa_date',
  taa_montant: 'taa_montant',
  taa_remise: 'taa_remise',
  taa_montant_net: 'taa_montant_net'
};

exports.Prisma.Attribut_cenov_dev_ewanScalarFieldEnum = {
  atr_id: 'atr_id',
  atr_nat: 'atr_nat',
  atr_val: 'atr_val',
  atr_label: 'atr_label',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FournisseurScalarFieldEnum = {
  frs_id: 'frs_id',
  frs_code: 'frs_code',
  frs_label: 'frs_label'
};

exports.Prisma.Kit_cenov_dev_ewanScalarFieldEnum = {
  kit_id: 'kit_id',
  kit_label: 'kit_label',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Kit_attribute_cenov_dev_ewanScalarFieldEnum = {
  fk_kit: 'fk_kit',
  fk_attribute_carac: 'fk_attribute_carac',
  fk_attribute_unit: 'fk_attribute_unit',
  kat_valeur: 'kat_valeur',
  created_at: 'created_at',
  updated_at: 'updated_at',
  kat_id: 'kat_id'
};

exports.Prisma.Part_nc_cenov_dev_ewanScalarFieldEnum = {
  par_id: 'par_id',
  fk_kit: 'fk_kit',
  par_label: 'par_label',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Famille_ewanScalarFieldEnum = {
  fam_id: 'fam_id',
  fk_parent: 'fk_parent',
  fam_code: 'fam_code',
  fam_label: 'fam_label',
  fk_supplier: 'fk_supplier'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  categorie: 'categorie',
  categorie_attribut_cenov_dev_ewan: 'categorie_attribut_cenov_dev_ewan',
  cross_ref: 'cross_ref',
  famille: 'famille',
  produit: 'produit',
  produit_categorie_cenov_dev_ewan: 'produit_categorie_cenov_dev_ewan',
  tarif_achat_cenov_dev_ewan: 'tarif_achat_cenov_dev_ewan',
  attribut_cenov_dev_ewan: 'attribut_cenov_dev_ewan',
  fournisseur: 'fournisseur',
  kit_cenov_dev_ewan: 'kit_cenov_dev_ewan',
  kit_attribute_cenov_dev_ewan: 'kit_attribute_cenov_dev_ewan',
  part_nc_cenov_dev_ewan: 'part_nc_cenov_dev_ewan',
  famille_ewan: 'famille_ewan'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)

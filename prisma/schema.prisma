generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SECRET_DATABASE_URL")
}

model attribute {
  atr_id                                                    Int             @id @default(autoincrement())
  atr_nat                                                   String?         @db.VarChar(60)
  atr_val                                                   String?         @db.VarChar(60)
  atr_label                                                 String?         @db.VarChar(100)
  created_at                                                DateTime?       @default(now()) @db.Timestamp(6)
  updated_at                                                DateTime?       @default(now()) @db.Timestamp(6)
  kit_attribute_kit_attribute_fk_attribute_caracToattribute kit_attribute[] @relation("kit_attribute_fk_attribute_caracToattribute")
  kit_attribute_kit_attribute_fk_attributeToattribute       kit_attribute[] @relation("kit_attribute_fk_attributeToattribute")

  @@unique([atr_nat, atr_val], map: "idx_attribute")
}

model document {
  doc_id        Int            @id @default(autoincrement())
  doc_name      String?        @db.VarChar(100)
  doc_extension String?        @db.VarChar(5)
  doc_type      String?        @db.VarChar(10)
  doc_binary    Bytes?
  kit_document  kit_document[]
}

model kit {
  kit_id                             Int             @id @default(autoincrement())
  kit_label                          String?         @db.VarChar(100)
  created_at                         DateTime?       @default(now()) @db.Timestamp(6)
  updated_at                         DateTime?       @default(now()) @db.Timestamp(6)
  kit_attribute                      kit_attribute[]
  kit_document                       kit_document[]
  kit_kit_kit_kit_fk_kit_childTokit  kit_kit[]       @relation("kit_kit_fk_kit_childTokit")
  kit_kit_kit_kit_fk_kit_parentTokit kit_kit[]       @relation("kit_kit_fk_kit_parentTokit")
  part                               part[]
}

model kit_attribute {
  kat_id                                                Int        @id @default(autoincrement())
  fk_kit                                                Int?
  fk_attribute_carac                                    Int?
  fk_attribute                                          Int?
  kat_valeur                                            Float?
  created_at                                            DateTime?  @default(now()) @db.Timestamp(6)
  updated_at                                            DateTime?  @default(now()) @db.Timestamp(6)
  attribute_kit_attribute_fk_attribute_caracToattribute attribute? @relation("kit_attribute_fk_attribute_caracToattribute", fields: [fk_attribute_carac], references: [atr_id], onDelete: NoAction, onUpdate: NoAction)
  attribute_kit_attribute_fk_attributeToattribute       attribute? @relation("kit_attribute_fk_attributeToattribute", fields: [fk_attribute], references: [atr_id], onDelete: NoAction, onUpdate: NoAction)
  kit                                                   kit?       @relation(fields: [fk_kit], references: [kit_id], onDelete: NoAction, onUpdate: NoAction)
}

model kit_document {
  kid_id          Int       @id @default(autoincrement())
  fk_kit          Int?
  fk_document     Int?
  kid_description String?   @db.VarChar(255)
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
  document        document? @relation(fields: [fk_document], references: [doc_id], onDelete: NoAction, onUpdate: NoAction, map: "kit_document_kit_doc_id_fk")
  kit             kit?      @relation(fields: [fk_kit], references: [kit_id], onDelete: NoAction, onUpdate: NoAction, map: "kit_document_kit_kit_id_fk")
}

model kit_kit {
  kik_id                         Int       @id @default(autoincrement())
  fk_kit_parent                  Int?
  fk_kit_child                   Int?
  kik_qty                        Int?
  kik_index                      Int?
  created_at                     DateTime? @default(now()) @db.Timestamp(6)
  updated_at                     DateTime? @default(now()) @db.Timestamp(6)
  kit_kit_kit_fk_kit_childTokit  kit?      @relation("kit_kit_fk_kit_childTokit", fields: [fk_kit_child], references: [kit_id], onDelete: NoAction, onUpdate: NoAction)
  kit_kit_kit_fk_kit_parentTokit kit?      @relation("kit_kit_fk_kit_parentTokit", fields: [fk_kit_parent], references: [kit_id], onDelete: NoAction, onUpdate: NoAction)
}

model part {
  par_id     Int       @id @default(autoincrement())
  fk_kit     Int?
  par_label  String?   @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  kit        kit?      @relation(fields: [fk_kit], references: [kit_id], onDelete: NoAction, onUpdate: NoAction)
}

model supplier {
  sup_id    Int     @id(map: "supplier_pk") @default(autoincrement())
  sup_code  String  @db.VarChar(10)
  sup_label String? @db.VarChar(50)

  @@index([sup_code], map: "supplier_sup_code_index")
}